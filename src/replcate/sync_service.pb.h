// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sync_service.proto
// Protobuf C++ Version: 5.29.3

#ifndef sync_5fservice_2eproto_2epb_2eh
#define sync_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sync_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sync_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_sync_5fservice_2eproto;
namespace blp {
class DataItem;
struct DataItemDefaultTypeInternal;
extern DataItemDefaultTypeInternal _DataItem_default_instance_;
class SyncRequest;
struct SyncRequestDefaultTypeInternal;
extern SyncRequestDefaultTypeInternal _SyncRequest_default_instance_;
class SyncResponse;
struct SyncResponseDefaultTypeInternal;
extern SyncResponseDefaultTypeInternal _SyncResponse_default_instance_;
}  // namespace blp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace blp {

// ===================================================================


// -------------------------------------------------------------------

class SyncRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:blp.SyncRequest) */ {
 public:
  inline SyncRequest() : SyncRequest(nullptr) {}
  ~SyncRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SyncRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SyncRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncRequest(const SyncRequest& from) : SyncRequest(nullptr, from) {}
  inline SyncRequest(SyncRequest&& from) noexcept
      : SyncRequest(nullptr, std::move(from)) {}
  inline SyncRequest& operator=(const SyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncRequest& operator=(SyncRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncRequest* internal_default_instance() {
    return reinterpret_cast<const SyncRequest*>(
        &_SyncRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SyncRequest& a, SyncRequest& b) { a.Swap(&b); }
  inline void Swap(SyncRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SyncRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SyncRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SyncRequest& from) { SyncRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SyncRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "blp.SyncRequest"; }

 protected:
  explicit SyncRequest(::google::protobuf::Arena* arena);
  SyncRequest(::google::protobuf::Arena* arena, const SyncRequest& from);
  SyncRequest(::google::protobuf::Arena* arena, SyncRequest&& from) noexcept
      : SyncRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSlaveIdFieldNumber = 1,
    kLastMessageIdFieldNumber = 2,
  };
  // required string slave_id = 1;
  bool has_slave_id() const;
  void clear_slave_id() ;
  const std::string& slave_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_slave_id(Arg_&& arg, Args_... args);
  std::string* mutable_slave_id();
  PROTOBUF_NODISCARD std::string* release_slave_id();
  void set_allocated_slave_id(std::string* value);

  private:
  const std::string& _internal_slave_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_slave_id(
      const std::string& value);
  std::string* _internal_mutable_slave_id();

  public:
  // optional string last_message_id = 2;
  bool has_last_message_id() const;
  void clear_last_message_id() ;
  const std::string& last_message_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_message_id(Arg_&& arg, Args_... args);
  std::string* mutable_last_message_id();
  PROTOBUF_NODISCARD std::string* release_last_message_id();
  void set_allocated_last_message_id(std::string* value);

  private:
  const std::string& _internal_last_message_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_message_id(
      const std::string& value);
  std::string* _internal_mutable_last_message_id();

  public:
  // @@protoc_insertion_point(class_scope:blp.SyncRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr slave_id_;
    ::google::protobuf::internal::ArenaStringPtr last_message_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DataItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:blp.DataItem) */ {
 public:
  inline DataItem() : DataItem(nullptr) {}
  ~DataItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DataItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DataItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline DataItem(const DataItem& from) : DataItem(nullptr, from) {}
  inline DataItem(DataItem&& from) noexcept
      : DataItem(nullptr, std::move(from)) {}
  inline DataItem& operator=(const DataItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataItem& operator=(DataItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataItem* internal_default_instance() {
    return reinterpret_cast<const DataItem*>(
        &_DataItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DataItem& a, DataItem& b) { a.Swap(&b); }
  inline void Swap(DataItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DataItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DataItem& from) { DataItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DataItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "blp.DataItem"; }

 protected:
  explicit DataItem(::google::protobuf::Arena* arena);
  DataItem(::google::protobuf::Arena* arena, const DataItem& from);
  DataItem(::google::protobuf::Arena* arena, DataItem&& from) noexcept
      : DataItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageIdFieldNumber = 1,
    kKeyFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // required string message_id = 1;
  bool has_message_id() const;
  void clear_message_id() ;
  const std::string& message_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_id(Arg_&& arg, Args_... args);
  std::string* mutable_message_id();
  PROTOBUF_NODISCARD std::string* release_message_id();
  void set_allocated_message_id(std::string* value);

  private:
  const std::string& _internal_message_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_id(
      const std::string& value);
  std::string* _internal_mutable_message_id();

  public:
  // required string key = 2;
  bool has_key() const;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // required string value = 3;
  bool has_value() const;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:blp.DataItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DataItem& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_id_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SyncResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:blp.SyncResponse) */ {
 public:
  inline SyncResponse() : SyncResponse(nullptr) {}
  ~SyncResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SyncResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SyncResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncResponse(const SyncResponse& from) : SyncResponse(nullptr, from) {}
  inline SyncResponse(SyncResponse&& from) noexcept
      : SyncResponse(nullptr, std::move(from)) {}
  inline SyncResponse& operator=(const SyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncResponse& operator=(SyncResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncResponse* internal_default_instance() {
    return reinterpret_cast<const SyncResponse*>(
        &_SyncResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SyncResponse& a, SyncResponse& b) { a.Swap(&b); }
  inline void Swap(SyncResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SyncResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SyncResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SyncResponse& from) { SyncResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SyncResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "blp.SyncResponse"; }

 protected:
  explicit SyncResponse(::google::protobuf::Arena* arena);
  SyncResponse(::google::protobuf::Arena* arena, const SyncResponse& from);
  SyncResponse(::google::protobuf::Arena* arena, SyncResponse&& from) noexcept
      : SyncResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kIsFullSyncFieldNumber = 2,
    kHasMoreFieldNumber = 3,
  };
  // repeated .blp.DataItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::blp::DataItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::blp::DataItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::blp::DataItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::blp::DataItem>* _internal_mutable_items();
  public:
  const ::blp::DataItem& items(int index) const;
  ::blp::DataItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::blp::DataItem>& items() const;
  // optional bool is_full_sync = 2;
  bool has_is_full_sync() const;
  void clear_is_full_sync() ;
  bool is_full_sync() const;
  void set_is_full_sync(bool value);

  private:
  bool _internal_is_full_sync() const;
  void _internal_set_is_full_sync(bool value);

  public:
  // optional bool has_more = 3;
  bool has_has_more() const;
  void clear_has_more() ;
  bool has_more() const;
  void set_has_more(bool value);

  private:
  bool _internal_has_more() const;
  void _internal_set_has_more(bool value);

  public:
  // @@protoc_insertion_point(class_scope:blp.SyncResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::blp::DataItem > items_;
    bool is_full_sync_;
    bool has_more_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sync_5fservice_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class SyncService_Stub;
class SyncService : public ::google::protobuf::Service {
 protected:
  SyncService() = default;

 public:
  using Stub = SyncService_Stub;

  SyncService(const SyncService&) = delete;
  SyncService& operator=(const SyncService&) = delete;
  virtual ~SyncService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void SyncData(::google::protobuf::RpcController* controller,
                        const ::blp::SyncRequest* request,
                        ::blp::SyncResponse* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class SyncService_Stub final : public SyncService {
 public:
  SyncService_Stub(::google::protobuf::RpcChannel* channel);
  SyncService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  SyncService_Stub(const SyncService_Stub&) = delete;
  SyncService_Stub& operator=(const SyncService_Stub&) = delete;

  ~SyncService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements SyncService ------------------------------------------
  void SyncData(::google::protobuf::RpcController* controller,
                        const ::blp::SyncRequest* request,
                        ::blp::SyncResponse* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SyncRequest

// required string slave_id = 1;
inline bool SyncRequest::has_slave_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SyncRequest::clear_slave_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slave_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SyncRequest::slave_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:blp.SyncRequest.slave_id)
  return _internal_slave_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SyncRequest::set_slave_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.slave_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:blp.SyncRequest.slave_id)
}
inline std::string* SyncRequest::mutable_slave_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_slave_id();
  // @@protoc_insertion_point(field_mutable:blp.SyncRequest.slave_id)
  return _s;
}
inline const std::string& SyncRequest::_internal_slave_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slave_id_.Get();
}
inline void SyncRequest::_internal_set_slave_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.slave_id_.Set(value, GetArena());
}
inline std::string* SyncRequest::_internal_mutable_slave_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.slave_id_.Mutable( GetArena());
}
inline std::string* SyncRequest::release_slave_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:blp.SyncRequest.slave_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.slave_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.slave_id_.Set("", GetArena());
  }
  return released;
}
inline void SyncRequest::set_allocated_slave_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.slave_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slave_id_.IsDefault()) {
    _impl_.slave_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:blp.SyncRequest.slave_id)
}

// optional string last_message_id = 2;
inline bool SyncRequest::has_last_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SyncRequest::clear_last_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_message_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SyncRequest::last_message_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:blp.SyncRequest.last_message_id)
  return _internal_last_message_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SyncRequest::set_last_message_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_message_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:blp.SyncRequest.last_message_id)
}
inline std::string* SyncRequest::mutable_last_message_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_message_id();
  // @@protoc_insertion_point(field_mutable:blp.SyncRequest.last_message_id)
  return _s;
}
inline const std::string& SyncRequest::_internal_last_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_message_id_.Get();
}
inline void SyncRequest::_internal_set_last_message_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_message_id_.Set(value, GetArena());
}
inline std::string* SyncRequest::_internal_mutable_last_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.last_message_id_.Mutable( GetArena());
}
inline std::string* SyncRequest::release_last_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:blp.SyncRequest.last_message_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.last_message_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.last_message_id_.Set("", GetArena());
  }
  return released;
}
inline void SyncRequest::set_allocated_last_message_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.last_message_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_message_id_.IsDefault()) {
    _impl_.last_message_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:blp.SyncRequest.last_message_id)
}

// -------------------------------------------------------------------

// DataItem

// required string message_id = 1;
inline bool DataItem::has_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void DataItem::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataItem::message_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:blp.DataItem.message_id)
  return _internal_message_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataItem::set_message_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:blp.DataItem.message_id)
}
inline std::string* DataItem::mutable_message_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_id();
  // @@protoc_insertion_point(field_mutable:blp.DataItem.message_id)
  return _s;
}
inline const std::string& DataItem::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_.Get();
}
inline void DataItem::_internal_set_message_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_id_.Set(value, GetArena());
}
inline std::string* DataItem::_internal_mutable_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_id_.Mutable( GetArena());
}
inline std::string* DataItem::release_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:blp.DataItem.message_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_id_.Set("", GetArena());
  }
  return released;
}
inline void DataItem::set_allocated_message_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_id_.IsDefault()) {
    _impl_.message_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:blp.DataItem.message_id)
}

// required string key = 2;
inline bool DataItem::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void DataItem::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& DataItem::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:blp.DataItem.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataItem::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:blp.DataItem.key)
}
inline std::string* DataItem::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:blp.DataItem.key)
  return _s;
}
inline const std::string& DataItem::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void DataItem::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DataItem::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DataItem::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:blp.DataItem.key)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void DataItem::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:blp.DataItem.key)
}

// required string value = 3;
inline bool DataItem::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void DataItem::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& DataItem::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:blp.DataItem.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataItem::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:blp.DataItem.value)
}
inline std::string* DataItem::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:blp.DataItem.value)
  return _s;
}
inline const std::string& DataItem::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void DataItem::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* DataItem::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* DataItem::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:blp.DataItem.value)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.value_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.value_.Set("", GetArena());
  }
  return released;
}
inline void DataItem::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:blp.DataItem.value)
}

// -------------------------------------------------------------------

// SyncResponse

// repeated .blp.DataItem items = 1;
inline int SyncResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int SyncResponse::items_size() const {
  return _internal_items_size();
}
inline void SyncResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::blp::DataItem* SyncResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:blp.SyncResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::blp::DataItem>* SyncResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:blp.SyncResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::blp::DataItem& SyncResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:blp.SyncResponse.items)
  return _internal_items().Get(index);
}
inline ::blp::DataItem* SyncResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::blp::DataItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:blp.SyncResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::blp::DataItem>& SyncResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:blp.SyncResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::blp::DataItem>&
SyncResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::blp::DataItem>*
SyncResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// optional bool is_full_sync = 2;
inline bool SyncResponse::has_is_full_sync() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SyncResponse::clear_is_full_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_full_sync_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool SyncResponse::is_full_sync() const {
  // @@protoc_insertion_point(field_get:blp.SyncResponse.is_full_sync)
  return _internal_is_full_sync();
}
inline void SyncResponse::set_is_full_sync(bool value) {
  _internal_set_is_full_sync(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:blp.SyncResponse.is_full_sync)
}
inline bool SyncResponse::_internal_is_full_sync() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_full_sync_;
}
inline void SyncResponse::_internal_set_is_full_sync(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_full_sync_ = value;
}

// optional bool has_more = 3;
inline bool SyncResponse::has_has_more() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SyncResponse::clear_has_more() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_more_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SyncResponse::has_more() const {
  // @@protoc_insertion_point(field_get:blp.SyncResponse.has_more)
  return _internal_has_more();
}
inline void SyncResponse::set_has_more(bool value) {
  _internal_set_has_more(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:blp.SyncResponse.has_more)
}
inline bool SyncResponse::_internal_has_more() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_more_;
}
inline void SyncResponse::_internal_set_has_more(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_more_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace blp


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // sync_5fservice_2eproto_2epb_2eh
